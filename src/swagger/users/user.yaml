parameters:
  - name: id
    in: path
    description: User ID
    required: true
    schema:
      type: integer
      format: int64

get:
  tags:
    - 'User'
  summary: '사용자 조회'
  responses:
    '200':
      description: 'Success'
      content:
        application/json:
          schema:
            $ref: './users.yaml#/schemas/User'
          examples:
            userExample:
              $ref: './users.yaml#/examples/User'

patch:
  tags:
    - 'User'
  summary: '사용자 수정'
  requestBody:
    description: '사용자 수정'
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/UserUpdate'
        examples:
          userExample:
            $ref: '#/examples/UserUpdate'
  responses:
    '200':
      description: 'Success'
      content:
        application/json:
          schema:
            $ref: './users.yaml#/schemas/User'
          examples:
            userExample:
              $ref: './users.yaml#/examples/User'

schemas:
  UserUpdate:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      newPassword:
        type: string
      newPasswordConfirm:
        type: string
    required:
      - name
      - email
      - password
      - newPassword
      - newPasswordConfirm
examples:
  UserUpdate:
    value:
      name: "홍길동"
      email: "hong@example.com"
      password: "1234"